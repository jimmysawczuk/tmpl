name: Release new version
on:
  push:
    tags:
      - v*
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        fetch-depth: '0'
    - name: Get tag
      id: tag
      uses: jimmysawczuk/get-tag-from-ref@master
      with:
        ref: ${{ github.ref }}
    - name: Build
      run: |
        echo "-X main.version=${{ steps.tag.outputs.tag }} -X main.revision=$GITHUB_SHA -X main.date=$(date --iso-8601=seconds)" > /tmp/buildtags
        cat /tmp/buildtags

        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o "tmpl-${{ steps.tag.outputs.tag }}-linux-amd64" -ldflags "-s -d -w $(cat /tmp/buildtags)" -mod=vendor .
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ steps.tag.outputs.tag }}
        draft: true
    - name: Upload build (linux, amd64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tmpl-$${{ steps.tag.outputs.tag }}-linux-amd64
        asset_name: tmpl-${{ steps.tag.outputs.tag }}-linux-amd64
        asset_content_type: application/octet-stream
